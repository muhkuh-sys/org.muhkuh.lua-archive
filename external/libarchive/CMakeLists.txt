cmake_minimum_required(VERSION 3.2.3)

PROJECT("libarchive")

INCLUDE(ExternalProject)

# Python is used for some test scripts.
FIND_PACKAGE(PythonInterp 2.7 REQUIRED)

SET(VERSION_EXTERNAL "3.5.0")


#----------------------------------------------------------------------------
#
# Build the project.
#
SET(PRJ_CMAKE_ARGS "")

LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}")
LIST(APPEND PRJ_CMAKE_ARGS "-DPRJ_DIR=${PRJ_DIR}")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}/install")

LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_NETTLE=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_OPENSSL=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LZO=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LZMA=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_ZLIB=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_BZip2=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LIBXML2=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_EXPAT=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_PCREPOSIX=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LibGCC=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CNG=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_TAR=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_TAR_SHARED=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CPIO=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CPIO_SHARED=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CAT=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CAT_SHARED=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_XATTR=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_ACL=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_ICONV=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_TEST=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_COVERAGE=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_INSTALL=ON")

LIST(APPEND PRJ_CMAKE_ARGS "-Dnet.zlib-zlib_DIR=${net.zlib-zlib_DIR}")

LIST(APPEND PRJ_CMAKE_ARGS "-DBZIP2_INCLUDE_DIR=${CMAKE_BINARY_DIR}/install/include")
LIST(APPEND PRJ_CMAKE_ARGS "-DBZIP2_INCLUDE_DIRS=${CMAKE_BINARY_DIR}/install/include")
LIST(APPEND PRJ_CMAKE_ARGS "-DBZIP2_LIBRARIES=${CMAKE_BINARY_DIR}/install/lib/libbzip2.a")

LIST(APPEND PRJ_CMAKE_ARGS "-DLIBLZMA_INCLUDE_DIR=${CMAKE_BINARY_DIR}/install/include")
LIST(APPEND PRJ_CMAKE_ARGS "-DLIBLZMA_INCLUDE_DIRS=${CMAKE_BINARY_DIR}/install/include")
LIST(APPEND PRJ_CMAKE_ARGS "-DLIBLZMA_LIBRARIES=${CMAKE_BINARY_DIR}/install/lib/liblzma.a")

LIST(APPEND PRJ_CMAKE_ARGS "-DLZ4_INCLUDE_DIR=${CMAKE_BINARY_DIR}/install/include")
LIST(APPEND PRJ_CMAKE_ARGS "-DLZ4_LIBRARY=${CMAKE_BINARY_DIR}/install/lib/liblz4.a")

ExternalProject_Add(TARGET_libarchive
                    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/libarchive-${VERSION_EXTERNAL}
                    URL ${CMAKE_CURRENT_SOURCE_DIR}/libarchive-${VERSION_EXTERNAL}.tar.xz
                    URL_HASH SHA1=b53da969cfc4a0b3235b2589b0d636db17c5d57e
                    PATCH_COMMAND "${PYTHON_EXECUTABLE}" ${CMAKE_HOME_DIRECTORY}/cmake/tools/apply_patches.py --working-folder ${CMAKE_CURRENT_BINARY_DIR}/libarchive-${VERSION_EXTERNAL}/src/TARGET_libarchive --patch-folder ${CMAKE_CURRENT_SOURCE_DIR}/patches --strip 1
                    CMAKE_ARGS ${PRJ_CMAKE_ARGS}
                    INSTALL_COMMAND make install
)
