cmake_minimum_required(VERSION 3.2.3)

PROJECT("libarchive")

INCLUDE(ExternalProject)

# Python is used for some test scripts.
FIND_PACKAGE(PythonInterp 2.7 REQUIRED)

SET(VERSION_EXTERNAL "3.3.2")


#----------------------------------------------------------------------------
#
# Build the project.
#
IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU"  AND  "${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
	SET(LOCAL_CFLAGS "-fPIC")
ELSE("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU"  AND  "${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
	SET(LOCAL_CFLAGS "")
ENDIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU"  AND  "${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")


SET(PRJ_CMAKE_ARGS "")

LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_C_FLAGS=${CMAKE_C_FLAGS} ${LOCAL_CFLAGS}")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}")
IF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_RC_COMPILER=${CMAKE_RC_COMPILER}")
ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}/install")

LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_NETTLE=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_OPENSSL=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LZO=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LZMA=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_ZLIB=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_BZip2=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LIBXML2=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_EXPAT=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_PCREPOSIX=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LibGCC=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CNG=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_TAR=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_TAR_SHARED=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CPIO=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CPIO_SHARED=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CAT=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CAT_SHARED=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_XATTR=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_ACL=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_ICONV=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_TEST=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_COVERAGE=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_INSTALL=ON")

LIST(APPEND PRJ_CMAKE_ARGS "-Dnet.zlib-zlib_DIR=${net.zlib-zlib_DIR}")


ExternalProject_Add(TARGET_libarchive
                    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/libarchive-${VERSION_EXTERNAL}
                    URL ${CMAKE_CURRENT_SOURCE_DIR}/libarchive-${VERSION_EXTERNAL}.tar.gz
                    URL_HASH SHA1=580064227105e30322caa6c67b59e8c8e6060027
                    PATCH_COMMAND "${PYTHON_EXECUTABLE}" ${CMAKE_HOME_DIRECTORY}/cmake/tools/apply_patches.py --working-folder ${CMAKE_CURRENT_BINARY_DIR}/libarchive-${VERSION_EXTERNAL}/src/TARGET_libarchive --patch-folder ${CMAKE_CURRENT_SOURCE_DIR}/patches --strip 1
                    CMAKE_ARGS ${PRJ_CMAKE_ARGS}
                    INSTALL_COMMAND make install
)
