cmake_minimum_required(VERSION 3.2.3)

PROJECT("libarchive")

INCLUDE(ExternalProject)

# Python is used for some test scripts.
FIND_PACKAGE(PythonInterp 2.7 REQUIRED)

SET(VERSION_EXTERNAL "3.2.2")


#----------------------------------------------------------------------------
#
# Build the project.
#
SET(PRJ_CMAKE_ARGS "")

LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}")
IF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_RC_COMPILER=${CMAKE_RC_COMPILER}")
ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=''")

LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_NETTLE=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_OPENSSL=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LZMA=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_ZLIB=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_BZip2=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_LIBXML2=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_EXPAT=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_PCREPOSIX=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_TAR=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_TAR_SHARED=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CPIO=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CPIO_SHARED=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CAT=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CAT_SHARED=FALSE")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_XATTR=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_ACL=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_ICONV=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_TEST=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_COVERAGE=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_INSTALL=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR}/install")

LIST(APPEND PRJ_CMAKE_ARGS "-DBZIP2_LIBRARIES=${CMAKE_BINARY_DIR}/bzip2/install/lib/libbzip2.a")
LIST(APPEND PRJ_CMAKE_ARGS "-DBZIP2_INCLUDE_DIR=${CMAKE_BINARY_DIR}/bzip2/install/include")
LIST(APPEND PRJ_CMAKE_ARGS "-DLZMA_LIBRARY=${CMAKE_BINARY_DIR}/lzma/install/lib/liblzma.a")
LIST(APPEND PRJ_CMAKE_ARGS "-DLZMA_INCLUDE_DIR=${CMAKE_BINARY_DIR}/lzma/install/include")
LIST(APPEND PRJ_CMAKE_ARGS "-DLZO2_LIBRARY=${CMAKE_BINARY_DIR}/lzo/install/lib/liblzo2.a")
LIST(APPEND PRJ_CMAKE_ARGS "-DLZO2_INCLUDE_DIR=${CMAKE_BINARY_DIR}/lzo/install/include")
LIST(APPEND PRJ_CMAKE_ARGS "-DLZ4_LIBRARY=${CMAKE_BINARY_DIR}/lz4/install/lib/liblz4.a")
LIST(APPEND PRJ_CMAKE_ARGS "-DLZ4_INCLUDE_DIR=${CMAKE_BINARY_DIR}/lz4/install/include")


ExternalProject_Add(TARGET_libarchive
                    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/libarchive-${VERSION_EXTERNAL}
                    URL ${CMAKE_CURRENT_SOURCE_DIR}/libarchive-${VERSION_EXTERNAL}.tar.gz
                    URL_HASH SHA1=ccf14e3b4ec7c6b242cf07062dd40e82a17485a5
                    CMAKE_ARGS ${PRJ_CMAKE_ARGS}
                    INSTALL_COMMAND make install
)
